name: Deploy Next.js to Ubuntu EC2

on:
  push:
    branches:
      - neelam-cicd  # Deployment branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # ✅ Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # ✅ Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.18.0'  # Using a Node.js version compatible with Next.js

      # ✅ Step 3: Prepare SSH Key
      - name: Prepare SSH Key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ./id_rsa
          chmod 600 ./id_rsa

      # ✅ Step 4: Generate `.env` in GitHub Runner
      - name: Generate `.env` file
        run: |
          echo "📌 Creating .env file locally..."
          cat <<EOF > .env
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
          NEXTAUTH_URL=${{ vars.NEXTAUTH_URL }}
          NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}
          NEXT_PUBLIC_API_URL=${{ vars.NEXT_PUBLIC_API_URL }}
          NEXT_PUBLIC_USE_MOCK_DATA=${{ vars.NEXT_PUBLIC_USE_MOCK_DATA }}
          EOF
          echo "✅ .env file created."

      # ✅ Step 5: Install Dependencies & Build in GitHub Runner
      - name: Install Dependencies & Build
        run: |
          echo "📦 Installing dependencies..."
          npm ci
          echo "✅ Dependencies installed."
          
          echo "🛠️ Building the frontend..."
          npm run build
          echo "✅ Build completed."

      # ✅ Step 6: Transfer Built Code to EC2
      - name: Transfer Files to EC2
        run: |
          echo "🔄 Connecting to EC2 & transferring files..."
          if [ ! -d ".next" ]; then
            echo "❌ Build directory does not exist! Make sure 'npm run build' succeeded."
            exit 1
          fi
          
          ssh -o StrictHostKeyChecking=no -i ./id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            echo "🔄 Checking if resume_frontend directory exists..."
            export HOME=/home/${{ secrets.EC2_USER }}
            if [ -d "$HOME/resume_frontend" ]; then
              echo "📥 Directory already exists, removing old files..."
              rm -rf $HOME/resume_frontend
            fi
            mkdir -p $HOME/resume_frontend
            echo "✅ Directory ready."
          EOF

          scp -o StrictHostKeyChecking=no -i ./id_rsa -r .next ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/resume_frontend/
          scp -o StrictHostKeyChecking=no -i ./id_rsa .env ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/resume_frontend/.env
          echo "✅ Files transferred."

      # ✅ Step 7: Start Frontend on EC2
      - name: Restart Frontend Application
        run: |
          echo "🚀 Restarting Frontend Application..."
          ssh -o StrictHostKeyChecking=no -i ./id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd $HOME/resume_frontend

            echo "⚙️ Checking if Node.js is installed..."
            if ! command -v node &> /dev/null; then
              echo "🚀 Installing Node.js & npm..."
              curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
              sudo apt-get install -y nodejs
            else
              echo "✅ Node.js is already installed."
            fi
            node -v
            npm -v
      
            echo "⚙️ Ensuring PM2 is installed..."
            if ! command -v pm2 &> /dev/null; then
              echo "🚀 Installing PM2..."
              sudo npm install -g pm2
            fi
            echo "✅ PM2 is ready."

            echo "🚀 Restarting Frontend Application..."
            pm2 restart resume_frontend || pm2 start npm --name "resume_frontend" -- start
            pm2 save
            echo "✅ Frontend restarted successfully."
          EOF

      # ✅ Step 8: Verify Deployment
      - name: Verify Frontend Deployment
        run: |
          echo "🛠️ Checking Frontend status..."
          ssh -o StrictHostKeyChecking=no -i ./id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            sleep 5
            if curl -f http://localhost:3000; then
              echo "✅ Frontend is running!"
            else
              echo "❌ Frontend failed to start! Check logs."
              exit 1
            fi
          EOF
